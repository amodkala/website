---
// Import necessary functions and components
import { getCollection } from 'astro:content';
import NoteEntry from "./NoteEntry.astro";
import Preamble from "./text/notes-preamble.mdx";
import Postscript from "./text/notes-postscript.mdx";

// Define an interface for the note structure
interface Note {
  data: {
    key: number;
    title: string;
    source: string;
  }
}

// Fetch notes from the collection
let notes: Note[] = await getCollection('notes');

// Initialize sources with an explicit type to avoid TypeScript errors
let sources: { [key: string]: Note[] } = {};
notes.forEach((note) => {
    const source = note.data.source;
    if (!(source in sources)) {
        sources[source] = [];
    }
    sources[source].push(note);
});

// Sort each group of notes by key
Object.keys(sources).forEach(source => {
    sources[source].sort((a, b) => a.data.key - b.data.key);
});
---

<div>
    <div class="prose dark:prose-invert">
        <h1>Notes</h1>
        <Preamble />
    </div>
    <div>
        {
            Object.entries(sources).map(([source, notes]) => (
                <div class="my-5 prose dark:prose-invert">
                    <h2>{source}</h2>
                    <ul>
                        {notes.map(note => (
                            <div class="mt-2">
                                <li class="prose dark:prose-invert text-pretty max-w-none">
                                    <NoteEntry entry={note} />
                                </li>
                            </div>
                        ))}
                    </ul>
                </div>
            ))
        }
    </div>
    <div class="prose dark:prose-invert">
        <Postscript />
    </div>
</div>

